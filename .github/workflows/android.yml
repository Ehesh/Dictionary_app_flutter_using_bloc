name: Release

on:
  push:
    branches:
      - main

name: "Build & Release"
jobs:
  build:
    name: Build & Release
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '3.3.9'
      - run: flutter pub get
      - run: flutter test
      - run: flutter build apk --debug --split-per-abi
      - run: |
          flutter build ios --no-codesign
          cd build/ios/iphoneos
          mkdir Payload
          cd Payload
          ln -s ../Runner.app
          cd ..
          zip -r app.ipa Payload
      - name: Push to Releases
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/apk/debug/*,build/ios/iphoneos/app.ipa"
          tag: v1.0.${{ github.run_number }}
          token: ${{ secrets.TOKEN }}

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v2

#     - name: Build release APK
#       run: flutter build apk --release

#     - name: Sign APK
#       run: jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore my-release-key.jks build/app/outputs/apk/release/app-release.apk alias_name

#     - name: Optimize APK
#       run: zipalign -v 4 build/app/outputs/apk/release/app-release.apk app-release-aligned.apk

#     - name: Upload to GitHub Releases
#       uses: actions/upload-release-asset@v1
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       with:
#         upload_url: ${{ steps.create_release.outputs.upload_url }}
#         asset_path: app-release-aligned.apk
#         asset_name: app-release-aligned.apk
#         asset_content_type: application/vnd.android.package-archive